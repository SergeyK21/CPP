1. Скомпилируйте вашу программу и убедитесь в её работоспособности. Затем загрузите директорию проекта, которая содержит только файлы CMakeLists.txt и main.cpp, в облачное хранилище или Git-репозиторий и отправьте ссылку на проверку.

2. Модифицируйте проект так, чтобы для включения светодиода необходимо было нажать на кнопку несколько раз.

3. Модифицируйте проект, чтобы в памяти микроконтроллера сохранялись четыре последние полученные через серийный порт команды. Организуйте вывод полученных команд в серийный порт через каждые 20 секунд.

4. В рамках практической работы к модулю 3 вы создали программу, которая позволяет сохранять последние четыре значения мощности для светодиода, полученные через серийный порт. Добавьте пользовательскую функцию mean, которая в качестве аргумента принимает вектор целочисленных значений и возвращает арифметическое среднее по массиву. Используйте эту функцию для вычисления скользящего среднего значения мощности светодиода на основе значений, полученных через серийный порт.

5. Необходимо создать базовый класс Car, содержащий следующие члены:

торговая_марка — string; 
число_цилиндров — int; 
мощность — int.
Далее необходимо создать производный класс Lorry (грузовик), который расширен грузоподъёмностью кузова (тип int). 

Классы должны иметь перегруженные операторы ввода и вывода информации о машине (операторы << >>). Кроме того, требуется реализовать дружественную функцию count, возвращающую количество всех созданных объектов Car и его производных классов. 

6. В рамках изучения видео 3 вы создали класс для хранения матриц и реализовали перегрузку операторов для выполнения простых матричных операций (сложение, вычитание и умножение) с использованием дружественных функций. Дополните класс матриц перегруженными операторами сложения, вычитания и умножения матриц с присваиванием, а также операторами ввода и вывода матрицы в консоль (<<>>).

Алгоритм действий:

Добавьте в класс Matrix метод для перегрузки оператора += (сложение матриц с присваиванием).
Добавьте в класс Matrix метод для перегрузки оператора −= (вычитание матриц с присваиванием).
Добавьте в класс Matrix метод для перегрузки оператора *= (умножение матрицы на число с присваиванием).
Добавьте в класс Matrix метод для перегрузки операторов << и >>.